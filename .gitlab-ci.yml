# use the official gcc image, based on debian
# can use versions as well, like gcc:5.2
# see https://hub.docker.com/_/gcc/

image: gcc

stages:
  - build
  - run
  - compare

build_all:
  stage: build
  before_script:
    - apt-get update --yes
    - apt-get install --yes meson ninja-build
    - apt-get install --yes gfortran-12
    - ln -sf /usr/bin/gfortran-12 /usr/bin/gfortran
    - apt-get install --yes openmpi-bin libopenmpi-dev
    - cd tests
    - meson setup builddir
  script:
    - cd ${CI_PROJECT_DIR}/tests/builddir
    - meson compile test_omp
#    - meson compile test_cuda
    - meson compile test_mpi
  artifacts:
    expire_in: 7 days
    paths:
      - ${CI_PROJECT_DIR}/tests/builddir/test_omp
#     - ${CI_PROJECT_DIR}/tests/builddir/test_cuda
      - ${CI_PROJECT_DIR}/tests/builddir/test_mpi

run_all:
  stage: run
  before_script:
    - apt-get update --yes
    - apt-get install --yes meson ninja-build
    - apt-get install --yes gfortran-12
    - ln -sf /usr/bin/gfortran-12 /usr/bin/gfortran
    - apt-get install --yes openmpi-bin libopenmpi-dev
  script:
    - cd ${CI_PROJECT_DIR}/tests/builddir
    - ./test_omp -x_dim 100 -y_dim 100 -nthreads 4
    - which mpirun
#    - ./test_cuda -x_dim 10 -y_dim 10
    - mpirun --allow-run-as-root -np 4 ./test_mpi -x_dim 100 -y_dim 100 -nthreads 4
  artifacts:
    expire_in: 7 days
    paths:
      - ${CI_PROJECT_DIR}/tests/builddir/velocities_out_omp.dat
#     - ${CI_PROJECT_DIR}/tests/builddir/velocities_out_cuda.dat
      - ${CI_PROJECT_DIR}/tests/builddir/velocities_out_mpi.dat

compare_outputs:
  stage: compare
  script:
#    - diff ${CI_PROJECT_DIR}/tests/builddir/velocities_out_omp.dat ${CI_PROJECT_DIR}/tests/builddir/velocities_out_cuda.dat
    - diff ${CI_PROJECT_DIR}/tests/builddir/velocities_out_omp.dat ${CI_PROJECT_DIR}/tests/builddir/velocities_out_mpi.dat
#    - diff ${CI_PROJECT_DIR}/tests/builddir/velocities_out_cuda.dat ${CI_PROJECT_DIR}/tests/builddir/velocities_out_mpi.dat